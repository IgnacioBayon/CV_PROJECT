"""
def dibujar_tablero(tablero):
    DIMENSIONES = 8
    TAMANO_CASILLA = 50

    ancho = DIMENSIONES * TAMANO_CASILLA
    alto = DIMENSIONES * TAMANO_CASILLA
    pygame.init()
    pantalla = pygame.display.set_mode((ancho, alto))
    pygame.display.set_caption('Tablero de Damas')



    blanco = (255, 255, 255)
    azul = (0, 0, 255)
    colores = [blanco, azul]

    for fila in range(DIMENSIONES):
        for columna in range(DIMENSIONES):
            color = colores[(fila + columna) % 2]
            pygame.draw.rect(pantalla, color, pygame.Rect(columna*TAMANO_CASILLA, fila*TAMANO_CASILLA, TAMANO_CASILLA, TAMANO_CASILLA))

    # Dibujar las fichas en el tablero
    for fila in range(DIMENSIONES):
        for columna in range(DIMENSIONES):
            if tablero[fila][columna] == 1:
                pygame.draw.circle(pantalla, (255, 255, 255), (int(columna*TAMANO_CASILLA + TAMANO_CASILLA/2), int(fila*TAMANO_CASILLA + TAMANO_CASILLA/2)), int(TAMANO_CASILLA/3))
            elif tablero[fila][columna] == -1:
                pygame.draw.circle(pantalla, (0, 255, 0), (int(columna*TAMANO_CASILLA + TAMANO_CASILLA/2), int(fila*TAMANO_CASILLA + TAMANO_CASILLA/2)), int(TAMANO_CASILLA/3))

    pygame.display.flip()

    # Bucle principal
    corriendo = True
    while corriendo:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                corriendo = False

    pygame.quit()


def tracking_tiempo_real(picam: Picamera2):
    tablero_anterior = np.zeros((8,8))
    while True :
        frame = picam.capture_array()
        # Obtener tablero
        tablero = convertir_imagen_tablero(frame)

        secuencia = [] 
        if tablero not in secuencia:
            secuencia.append(tablero)


        if not tableros_coinciden(tablero, tablero_anterior):
            # muestra el tablero 
            print(tablero)
            # mandalo a pygame 
            dibujar_tablero(tablero)
        tablero_anterior = tablero
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
"""